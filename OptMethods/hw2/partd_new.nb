(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     23657,        617]
NotebookOptionsPosition[     21714,        544]
NotebookOutlinePosition[     22069,        560]
CellTagsIndexPosition[     22026,        557]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
derivateive of f(x) = (.5/(sqrt(1 + x^2))) - sqrt(1 + x^2)(1 - (.5/(1 + \
x^2))) + x\
\>", "WolframAlphaLong",
 CellChangeTimes->{{3.543010941347713*^9, 3.54301095116962*^9}}],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "derivateive of f(x) = (.5/(sqrt(1 + x^2))) - sqrt(1 + x^2)(1 - (.5/(1 + \
x^2))) + x", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {30, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Derivative", "scanner" -> "Derivative", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1", 
     "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "D[f[x] == 0.5/Sqrt[1 + x^2] - Sqrt[1 + x^2] (1 - 0.5/(1 + x^2)) + x, \
x]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              RowBox[{
                TagBox[
                 FractionBox["\[DifferentialD]", 
                  RowBox[{"\"\[DifferentialD]\"", "\[InvisibleSpace]", "x"}]], 
                 $CellContext`TagBoxWrapper[
                 "StringBoxes" -> RowBox[{"d/d", "x"}]]], "\[InvisibleSpace]", 
                RowBox[{"(", 
                  TagBox[
                   TagBox[
                    RowBox[{
                    RowBox[{"f", "(", "x", ")"}], "\[LongEqual]", 
                    TagBox[
                    RowBox[{
                    FractionBox["0.5`", 
                    SqrtBox[
                    RowBox[{"1", "+", 
                    SuperscriptBox["x", "2"]}]]], "-", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{"1", "+", 
                    SuperscriptBox["x", "2"]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    FractionBox["0.5`", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["x", "2"]}]]}], ")"}]}], "+", "x"}], 
                    Identity]}], HoldForm], 
                   PolynomialForm[#, TraditionalOrder -> False]& ], ")"}]}], 
              "\[LongEqual]", 
              RowBox[{"(", 
                RowBox[{
                  RowBox[{
                    SuperscriptBox[
                    "f", "\[Prime]", MultilineFunction -> None], "(", "x", 
                    ")"}], "\[LongEqual]", 
                  TagBox[
                   RowBox[{
                    FractionBox[
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{
                    SuperscriptBox["x", "2"]}]}], "-", "2.`"}], ")"}]}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["x", "2"], "+", "1"}], ")"}], 
                    RowBox[{"3", "/", "2"}]]], "+", "1"}], Identity]}], 
                ")"}]}], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Show steps", "input" -> "Input__Show steps"}, {}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Alternate form", "scanner" -> "Simplification", "id" -> 
     "AlternateForm", "position" -> "200", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Factor[f'[x] == 1 + (x (-2. - x^2))/(1 + x^2)^(3/2)]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              RowBox[{
                SuperscriptBox["f", "\[Prime]", MultilineFunction -> None], 
                "(", "x", ")"}], "\[LongEqual]", 
              TagBox[
               FractionBox[
                RowBox[{
                  SuperscriptBox["x", "4"], "+", 
                  RowBox[{"2.`", " ", 
                    SuperscriptBox["x", "2"]}], "-", 
                  RowBox[{"2.`", " ", 
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["x", "2"], "+", "1"}]], " ", "x"}], "-", 
                  RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["x", "2"], "+", "1"}]], " ", 
                    SuperscriptBox["x", "3"]}], "+", "1.`"}], 
                SuperscriptBox[
                 RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox["x", "2"], "+", "1.`"}], ")"}], "2"]], 
               Identity]}], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
]}], Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Expanded form", "scanner" -> "Simplification", "id" -> 
     "ExpandedForm", "position" -> "300", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Expand[f'[x] == 1 + (x (-2. - x^2))/(1 + x^2)^(3/2)]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              RowBox[{
                SuperscriptBox["f", "\[Prime]", MultilineFunction -> None], 
                "(", "x", ")"}], "\[LongEqual]", 
              TagBox[
               RowBox[{
                 RowBox[{"-", 
                   FractionBox[
                    RowBox[{"2.`", " ", "x"}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["x", "2"], "+", "1"}], ")"}], 
                    RowBox[{"3", "/", "2"}]]]}], "-", 
                 RowBox[{
                   FractionBox[
                    SuperscriptBox["x", "3"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["x", "2"], "+", "1"}], ")"}], 
                    RowBox[{"3", "/", "2"}]]]}], "+", "1"}], Identity]}], 
            TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Show steps", "input" -> 
         "ExpandedForm__Show steps"}, {}]}]}], Typeset`pod4$$, Typeset`pod5$$,
    Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, Typeset`pod9$$, 
   Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, Typeset`pod13$$, 
   Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, Typeset`pod17$$, 
   Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, Typeset`pod21$$, 
   Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, Typeset`pod25$$, 
   Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, Typeset`pod29$$, 
   Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, Typeset`pod33$$, 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`aux6$$ = {True, False, {False}, True},
    Typeset`aux7$$ = {True, False, {False}, True}, Typeset`aux8$$ = {
   True, False, {False}, True}, Typeset`aux9$$ = {True, False, {False}, True},
    Typeset`aux10$$ = {True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`aux16$$ = {
   True, False, {False}, True}, Typeset`aux17$$ = {
   True, False, {False}, True}, Typeset`aux18$$ = {
   True, False, {False}, True}, Typeset`aux19$$ = {
   True, False, {False}, True}, Typeset`aux20$$ = {
   True, False, {False}, True}, Typeset`aux21$$ = {
   True, False, {False}, True}, Typeset`aux22$$ = {
   True, False, {False}, True}, Typeset`aux23$$ = {
   True, False, {False}, True}, Typeset`aux24$$ = {
   True, False, {False}, True}, Typeset`aux25$$ = {
   True, False, {False}, True}, Typeset`aux26$$ = {
   True, False, {False}, True}, Typeset`aux27$$ = {
   True, False, {False}, True}, Typeset`aux28$$ = {
   True, False, {False}, True}, Typeset`aux29$$ = {
   True, False, {False}, True}, Typeset`aux30$$ = {
   True, False, {False}, True}, Typeset`aux31$$ = {
   True, False, {False}, True}, Typeset`aux32$$ = {
   True, False, {False}, True}, Typeset`aux33$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["warnings", {"count" -> "1"}, {
      XMLElement[
      "spellcheck", {
       "word" -> "derivateive", "suggestion" -> "derivative", "text" -> 
        "Interpreting \"derivateive\" as \"derivative\""}, {}]}]}, 
   Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {{
    "success" -> "true", "error" -> "false", "numpods" -> "3", "datatypes" -> 
     "D", "timedout" -> "Simplification", "timedoutpods" -> "", "timing" -> 
     "2.792", "parsetiming" -> "0.992", "parsetimedout" -> "false", 
     "recalculate" -> 
     "http://www2.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa22371a12d75195463i5a00000ca7i5ecggeghdf4&s=19", "id" -> 
     "MSPa22381a12d75195463i5a00003668g64e13f515d6", "host" -> 
     "http://www2.wolframalpha.com", "server" -> "19", "related" -> 
     "http://www2.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa22391a12d75195463i5a000016faa247387ci37a&s=19", "version" -> "2.5"}, {
    "success" -> "true", "error" -> "false", "numpods" -> "0", "datatypes" -> 
     "D", "timedout" -> "", "timedoutpods" -> "", "timing" -> "1.948", 
     "parsetiming" -> "0.", "parsetimedout" -> "false", "recalculate" -> "", 
     "id" -> "", "host" -> "http://www2.wolframalpha.com", "server" -> "19", 
     "related" -> "", "version" -> "2.5"}}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -4., 
    "Date" -> {2012, 4, 9, 21, 42, 35.676737`8.3049601064921}, "Line" -> 81, 
    "SessionID" -> 23219325981088390175}, Typeset`showpods$$ = {1, 2, 3}, 
   Typeset`failedpods$$ = {4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
   18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33}, 
   Typeset`chosen$$ = {}, Typeset`open$$ = False, Typeset`newq$$ = 
   "derivateive of f(x) = (.5/(sqrt(1 + x^2))) - sqrt(1 + x^2)(1 - (.5/(1 + \
x^2))) + x"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
         Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
         Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
         Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
         Typeset`pod33$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
         Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
         Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
         Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
         Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
         Typeset`aux33$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{673., {180., 186.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], AlphaIntegration`DoAsyncInitialization[
       Hold[{
        2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
          Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
          Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
          Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
          Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
          Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
          Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
          Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
          Typeset`pod33$$}, {
         Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
          Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
          Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
          Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
          Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
          Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
          Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
          Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
          Typeset`aux33$$}, Typeset`chosen$$, Typeset`open$$, 
         Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
         Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
         Typeset`failedpods$$, Typeset`newq$$, 
         "http://www2.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa22371a12d75195463i5a00000ca7i5ecggeghdf4&s=19", Typeset`asyncpods$$}]]; 
     Typeset`asyncpods$$ = {}; Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print",
 CellMargins->{{20, 10}, {Inherited, Inherited}},
 CellChangeTimes->{3.543010955815734*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"OriginalF", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{".5", "/", 
     RowBox[{"(", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"1", "+", 
        RowBox[{"x", "^", "2"}]}], "]"}], ")"}]}], ")"}], "-", 
   RowBox[{
    RowBox[{"Sqrt", "[", 
     RowBox[{"1", "+", 
      RowBox[{"x", "^", "2"}]}], "]"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"(", 
       RowBox[{".5", "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"x", "^", "2"}]}], ")"}]}], ")"}]}], ")"}]}], "+", 
   "x"}]}]], "Input",
 CellChangeTimes->{{3.5430110351666594`*^9, 3.5430110552150517`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"FirstF", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"OriginalF", "[", 
      RowBox[{"x", " ", "+", " ", "0.001"}], "]"}], " ", "-", " ", 
     RowBox[{"Original", "[", 
      RowBox[{"x", " ", "-", " ", "0.001"}], "]"}]}], ")"}], " ", "/", " ", 
   RowBox[{"(", 
    RowBox[{"2", "*", "0.001"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.543011057425601*^9, 3.543011105317279*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SecondF", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"OriginalF", "[", 
      RowBox[{"x", " ", "+", " ", "0.001"}], "]"}], " ", "-", 
     RowBox[{"2", 
      RowBox[{"OriginalF", "[", "x", "]"}]}], " ", "+", " ", 
     RowBox[{"OriginalF", "[", 
      RowBox[{"x", " ", "-", " ", "0.001"}], "]"}]}], ")"}], " ", "/", " ", 
   RowBox[{"(", 
    RowBox[{"0.001", "^", "2"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.543011106638835*^9, 3.543011137620159*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"NextP", "[", "x_", "]"}], ":=", 
  RowBox[{"x", " ", "-", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.001", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"OriginalF", "[", 
          RowBox[{"x", " ", "+", " ", "0.001"}], "]"}], " ", "-", " ", 
         RowBox[{"OriginalF", "[", 
          RowBox[{"x", " ", "-", " ", "0.001"}], "]"}]}], ")"}]}], ")"}], " ",
      "/", " ", 
     RowBox[{"(", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"OriginalF", "[", 
          RowBox[{"x", " ", "+", " ", "0.001"}], "]"}], " ", "-", " ", 
         RowBox[{"2", 
          RowBox[{"OriginalF", "[", "x", "]"}]}], " ", "+", " ", 
         RowBox[{"OriginalF", "[", 
          RowBox[{"x", " ", "-", " ", "0.001"}], "]"}]}], ")"}]}], ")"}]}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.543011145654282*^9, 3.543011219208455*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NextP", "[", "0.6", "]"}]], "Input",
 CellChangeTimes->{{3.543011228331777*^9, 3.5430112324189577`*^9}}],

Cell[BoxData["0.7409917248221013`"], "Output",
 CellChangeTimes->{3.543011232841138*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FirstF", "[", "0.6", "]"}]], "Input",
 CellChangeTimes->{{3.543011248089727*^9, 3.54301125275554*^9}}],

Cell[BoxData["0.10719891430377437`"], "Output",
 CellChangeTimes->{3.5430112531642437`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SecondF", "[", "0.6", "]"}]], "Input",
 CellChangeTimes->{{3.543011272701755*^9, 3.543011276826982*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.7603206105821769`"}]], "Output",
 CellChangeTimes->{3.543011277228839*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FirstF", "[", "0.740992", "]"}]], "Input",
 CellChangeTimes->{{3.543011285626931*^9, 3.5430112922052917`*^9}}],

Cell[BoxData["0.0203097008475428`"], "Output",
 CellChangeTimes->{3.543011292757347*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SecondF", "[", "0.740992", "]"}]], "Input",
 CellChangeTimes->{{3.543011300892232*^9, 3.543011303018058*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.4858139799335248`"}]], "Output",
 CellChangeTimes->{3.543011303431094*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NextP", "[", "0.740992", "]"}]], "Input",
 CellChangeTimes->{{3.543011319511407*^9, 3.543011321549309*^9}}],

Cell[BoxData["0.7827975092822191`"], "Output",
 CellChangeTimes->{3.5430113219339523`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FirstF", "[", "0.782798", "]"}]], "Input",
 CellChangeTimes->{{3.543011329647501*^9, 3.54301133913246*^9}}],

Cell[BoxData["0.0014001841340260945`"], "Output",
 CellChangeTimes->{3.5430113414576263`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SecondF", "[", "0.782798", "]"}]], "Input",
 CellChangeTimes->{{3.543011350620697*^9, 3.543011352543353*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.41996688016077144`"}]], "Output",
 CellChangeTimes->{3.543011352935535*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NextP", "[", "0.782798", "]"}]], "Input",
 CellChangeTimes->{{3.543011360007653*^9, 3.543011361944478*^9}}],

Cell[BoxData["0.7861320346588523`"], "Output",
 CellChangeTimes->{3.543011362348995*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FirstF", "[", "0.786132", "]"}]], "Input",
 CellChangeTimes->{{3.543011372262231*^9, 3.543011377694281*^9}}],

Cell[BoxData["8.288403491318874`*^-6"], "Output",
 CellChangeTimes->{3.5430113795375633`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SecondF", "[", "0.786132", "]"}]], "Input",
 CellChangeTimes->{{3.54301139223566*^9, 3.543011393778583*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.4150100513800048`"}]], "Output",
 CellChangeTimes->{3.543011394194429*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  
  RowBox[{"NextP", "[", "0.6", "]"}]}]], "Input",
 CellChangeTimes->{{3.5430731262139387`*^9, 3.543073128688451*^9}}],

Cell[BoxData["0.7409917248221013`"], "Output",
 CellChangeTimes->{3.543073129087652*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NextP", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.543073129505165*^9, 3.543073132448037*^9}}],

Cell[BoxData["0.7827974700066882`"], "Output",
 CellChangeTimes->{3.543073132844552*^9}]
}, Open  ]]
},
WindowSize->{740, 756},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (February 23, \
2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 185, 4, 37, "WolframAlphaLong"],
Cell[767, 28, 14818, 295, 376, "Print"]
}, Open  ]],
Cell[15600, 326, 664, 22, 27, "Input"],
Cell[16267, 350, 454, 12, 27, "Input"],
Cell[16724, 364, 532, 14, 27, "Input"],
Cell[17259, 380, 927, 26, 58, "Input"],
Cell[CellGroupData[{
Cell[18211, 410, 128, 2, 27, "Input"],
Cell[18342, 414, 88, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18467, 420, 126, 2, 27, "Input"],
Cell[18596, 424, 91, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18724, 430, 128, 2, 27, "Input"],
Cell[18855, 434, 105, 2, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18997, 441, 134, 2, 27, "Input"],
Cell[19134, 445, 88, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19259, 451, 133, 2, 27, "Input"],
Cell[19395, 455, 105, 2, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19537, 462, 131, 2, 27, "Input"],
Cell[19671, 466, 90, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19798, 472, 131, 2, 27, "Input"],
Cell[19932, 476, 93, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20062, 482, 133, 2, 27, "Input"],
Cell[20198, 486, 106, 2, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20341, 493, 131, 2, 27, "Input"],
Cell[20475, 497, 88, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20600, 503, 132, 2, 27, "Input"],
Cell[20735, 507, 93, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20865, 513, 132, 2, 27, "Input"],
Cell[21000, 517, 105, 2, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21142, 524, 213, 4, 73, "Input"],
Cell[21358, 530, 88, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21483, 536, 124, 2, 27, "Input"],
Cell[21610, 540, 88, 1, 27, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
